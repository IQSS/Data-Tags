'scopeName': 'source.tags'
'name': 'DataTags Grammar'
'fileTypes': ['dg','ts']
'foldingStartMarker' : '\[\s*$'
'foldingStopMarker' : '^\s*\]'
'patterns':[
  {'include' : '#top_nodes'}
]
'repository':

  'top_nodes':
    'patterns':[
      {'include' : '#compoundSlot'}
      {'include' : '#AtomicSlot'}
      {'include' : "#comments"}
      {'include' : '#set_node'}
      {'include' : '#call_node'}
      {'include' : '#ask_node'}
      {'include' : '#end_node'}
      {'include' : '#todo_node'}
      {'include' : '#when_node'}
      {'include' : '#consider_node'}
      {'include' : '#section_node'}
      {'include' : '#import_node'}
      {'include' : '#reject_node'}
    ]

  'keyword':
    'name' : 'string.other.tags'
    'match' : '(some of|one of|TODO|todo)'

  'AtomicSlot':
    'name' : 'source.tags.slot.atomic'
    'begin' : '^([A-Za-z0-9_]+)(\\s*\\[(.*)\\]){0,1}(\\s*)(:)(\\s*)(some of|one of|TODO|todo)'
    'beginCaptures':
      '1':
        'name' : 'entity.name.tag.tags.slot.def'
      '3':
        'name'  : 'source.tags.note.content'
      '7':
        'name' : 'string.other.tags.keyword'
    'end' : '(\\.)'
    'endCaptures':
      '1':
        'name' : 'constant.character.escape.tags'
    'patterns':[
      {
        'name' : 'markup.italic.tags.var'
        'match' : '([A-Za-z0-9_]+)'
      }
      {'include' : "#comments"}
      {'include'  : '#note'}
    ]

  'compoundSlot':
    'name' : 'source.tags.slot.compound'
    'begin' : '^([A-Za-z0-9_]+)(\\s*\\[(.*)\\]){0,1}(\\s*)(:)(\\s*)(consists of)'
    'beginCaptures':
      '1':
        'name' : 'entity.name.tag.tags.slot.def'
      '3':
        'name'  : 'source.tags.note.content'
      '7':
        'name' : 'string.other.tags.keyword'
    'end' : '(\\.)'
    'endCaptures':
      '1':
        'name' : 'constant.character.escape.tags'
    'patterns':[
      {'include' : "#comments"}
      {
        'name' : 'entity.name.tag.tags.slot'
        'match' :  '([a-zA-Z0-9_/]+)'
        'captures':
          '1':
            'name': 'entity.name.tag.tags.slot'
      }
    ]

  'reject_node':
    'name' : 'source.tags.reject_node'
    'begin' : '(\\[)(\\s*)((>)(.*)(<)){0,1}(\\s*)(reject)(\\s*)(:)'
    'beginCaptures':
      '5':
        'name' : 'constant.character.escape.tags'
      '8':
        'name' : 'string.other.tags'
    'end' : '\\]'
    'contentName' : 'string.other.tags'
    'patterns':[
      {'include' : "#comments"}
    ]

  'ask_node':
    'name' : 'source.tags.ask_node'
    'begin' : '(\\[)(\\s*)((>)(.*)(<)){0,1}(\\s*)(ask)(\\s*)(:)'
    'beginCaptures':
      '5':
        'name' : 'constant.character.escape.tags'
      '8':
        'name' : 'string.other.tags'
    'end' : '\\]'
    'patterns':[
      {'include' : '#text_node'}
      {'include' : '#answer_node'}
      {'include' : "#comments"}
      {'include' : '#terms_node'}
    ]

  'when_node':
    'name' : 'source.tags.when_node'
    'begin' : '(\\[)(\\s*)((>)(.*)(<)){0,1}(\\s*)(when)( *)(:)'
    'beginCaptures':
      '5':
        'name' : 'constant.character.escape.tags'
      '8':
        'name' : 'string.other.tags'
    'end' : '\\]'
    'patterns':[
      {'include' : '#when_option_node'}
      {'include' : '#else_subnode'}
      {'include' : "#comments"}
    ]

  'consider_node':
    'name' : 'source.tags.consider_node'
    'begin' : '(\\[)(\\s*)((>)(.*)(<)){0,1}(\\s*)(consider)( *)(:)'
    'beginCaptures':
      '5':
        'name' : 'constant.character.escape.tags'
      '8':
        'name' : 'string.other.tags'
    'end' : '\\]'
    'patterns':[
      {'include' : '#slot_subnode'}
      {'include' : '#consider_options_subnode'}
      {'include' : '#else_subnode'}
      {'include' : "#comments"}
    ]

  'end_node':
    'name': 'source.tags.node.end'
    'match' : '(\\[)(\\s*)((>)(.*)(<)){0,1}(\\s*)(end)( *)(\\])'
    'captures':
      '5':
        'name' : 'constant.character.escape.tags'
      '8':
        'name': 'string.other.tags'

  'todo_node':
    'name' : 'source.tags.todo_node'
    'begin' : '(\\[)(\\s*)((>)(.*)(<)){0,1}(\\s*)(todo)( *)(:)'
    'beginCaptures':
      '5':
        'name' : 'constant.character.escape.tags'
      '8':
        'name' : 'string.other.tags'
    'end' : '\\]'
    'contentName' : 'comment.block.tags'
    'patterns': [{'include' : "#comments"}]


  'set_node':
    'name' : 'source.tags.set_node'
    'begin' : '(\\[)(\\s*)((>)(.*)(<)){0,1}(\\s*)(set)( *)(:)'
    'beginCaptures':
      '5':
        'name' : 'constant.character.escape.tags'
      '8':
        'name' : 'string.other.tags'
    'end' : '\\]'
    'patterns':[
      {'include' : '#assigment'}
      {'include' : '#comments'}
    ]

  'call_node':
    'begin' : '(\\[)(\\s*)((>)(.*)(<)){0,1}(\\s*)(call)( *)(:)'
    'beginCaptures':
      '5':
        'name' : 'constant.character.escape.tags'
      '8':
        'name' : 'string.other.tags'
    'end' : '\\]'
    'contentName' : 'declaration.section entity.name.section.tags'
    'patterns': [{'include' : "#comments"}]

  'terms_node':
    'name' : 'source.tags.terms_node'
    'begin' : '(\\{)( *)(terms)( *)(:)'
    'beginCaptures':
      '3':
        'name' : 'string.other.tags'
    'end' : '\\}'
    'patterns':[
      {'include' : '#comments'}
      {'include' : '#term_node'}
    ]

  'section_node':
    'name' : 'source.tags.section_node'
    'begin' : '(\\[)(\\s*)((>)(.*)(<)){0,1}(\\s*)(section)(\\s*)(:)'
    'beginCaptures':
      '5':
        'name' : 'constant.character.escape.tags'
      '8':
        'name' : 'string.other.tags'
    'end' : '\\]'
    'contentName' : 'declaration.section entity.name.section.tags'
    'patterns': [
      {'include' : '#title_node'}
      {'include' : "#comments"}
      {'include' : '#top_nodes'}
    ]

  'import_node':
    'name' : 'source.tags.import_node'
    'begin' : '(\\[)(\\s*)(import)(\\s*)(.*)(:)(.*)'
    'beginCaptures':
      '3':
        'name' : 'string.other.tags'
      '5':
        'name' : 'constant.character.escape.tags'
    'end' : '\\]'
    'contentName' : 'declaration.section entity.name.section.tags'
    'patterns': [
      {'include' : '#title_node'}
      {'include' : "#comments"}
      {'include' : '#top_nodes'}
    ]


  'when_option_node':
      'name' : 'source.tags.when_option_node'
      'begin' : '(\\{)( *)([a-zA-Z0-9_/]+)(\\s*)(=|\\+=)(\\s*)([a-zA-Z0-9_/]+)( *)(:)'
      'beginCaptures':
        '3':
          'name' : 'variable.language.tags'
        '7':
          'name' : 'constant.other.tags'
      'end' : '\\}'
      'patterns':[
        {'include' : '#comments'}
        {'include' : '#top_nodes'}
      ]

  'else_subnode':
    'name' : 'source.tags.terms_node'
    'begin' : '(\\{)( *)(else)( *)(:)'
    'beginCaptures':
      '3':
        'name' : 'string.other.tags'
    'end' : '\\}'
    'patterns':[
      {'include' : '#top_nodes'}
      {'include' : '#comments'}
    ]

  'slot_subnode':
    'name' : 'source.tags.slot_subnode'
    'begin' : '(\\{)( *)(slot)( *)(:)'
    'beginCaptures':
      '3':
        'name' : 'string.other.tags'
    'end' : '\\}'
    'patterns':[
      {'include' : '#comments'}
      {'include' : '#variable'}
    ]

  'consider_options_subnode':
    'name' : 'source.tags.consider_options_subnode'
    'begin' : '(\\{)( *)(options)( *)(:)'
    'beginCaptures':
      '3':
        'name' : 'string.other.tags'
    'end' : '\\}'
    'patterns':[
      {'include' : '#comments'}
      {'include' : '#consider_option_subnode'}
    ]

  'consider_option_subnode':
    'name' : 'source.tags.consider_option_subnode'
    'begin' : '(\\{)( *)([_a-zA-Z0-9]+)( *)(:)'
    'beginCaptures':
      '3':
        'name' : 'constant.other.tags'
    'end' : '\\}'
    'patterns':[
      {'include' : '#comments'}
      {'include' : '#top_nodes'}
    ]

  'term_node':
    'name' : 'source.tags.node.term'
    'begin' : '(\\{)'
    'end' : '\\}'
    'contentName' : 'markup.quote.tags'
    'patterns':[
      {
        'name' : 'source.tags.term'
        'match' : '([^:]*)(:)'
        'captures' :
          '1':
            'name' : 'string.other.tags'
      }
      {'include' : '#comments'}
    ]

  'title_node':
    'name' : 'source.tags.title_node'
    'begin' : '(\\{)( *)(title)( *)(:)'
    'beginCaptures':
      '3':
        'name' : 'string.other.tags'
    'end' : '\\}'
    'contentName' : 'markup.quote.tags'
    'patterns':[
      {'include' : '#comments'}
    ]

  'text_node':
    'name' : 'source.tags.set_node'
    'begin' : '(\\{)( *)(text)( *)(:)'
    'beginCaptures':
      '3':
        'name' : 'string.other.tags'
    'end' : '\\}'
    'contentName' : 'markup.quote.tags'
    'patterns':[
      {'include' : '#comments'}
    ]

  # TODO: break into answers_subnode and answer_subnode
  'answer_node':
    'name' : 'source.tags.set_node'
    'begin' : '(\\{)( *)(answers)( *)(:)'
    'beginCaptures':
      '3':
        'name' : 'string.other.tags'
    'end' : '\\}'
    'patterns':[
      {'include' : '#sub_node'}
      {'include' : '#comments'}
    ]

  'sub_node':
    'name' : 'source.tags.set_node'
    'begin' : '(\\{)([\\w ]*)(:)'
    'beginCaptures':
      '2':
        'name' : 'support.constant.tags'
    'end' : '\\}'
    'patterns':[
      {'include' : '#top_nodes'}
    ]

  'assigment':
    'name' : 'source.tags.assigment'
    'match' : '([a-zA-Z0-9_/]+)(\\s*)(=|\\+=)(\\s*)([a-zA-Z0-9_/]+)'
    'captures':
      '1':
        'name' : 'variable.language.default.tags'
      '3':
        'name' : 'keyword.operator.assignment.tags'
      '5':
        'name' : 'constant.other.tags'

  'variable':
    'name' : 'variable.language.default.tags'
    'match' : '([a-zA-Z0-9_]+)'

  'note':
    'name': 'source.tags.note'
    'begin': '\\['
    'end': '\\]'
    'contentName' : 'source.tags.note.content'

  'call_var':
    'match': '([a-zA-Z0-9_]+)'
    'name' : 'constant.character.escape.tags'

  'comments':
    'patterns': [
      {
        'name' : 'comment.block.tags'
        'begin' : '<\\*'
        'end' : '\\*>'
      }
      {
        'name' : 'comment.line.tags'
        'match' : '(<--.*)'
      }
    ]
